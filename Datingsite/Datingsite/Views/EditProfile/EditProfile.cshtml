@using System.Activities.Expressions
@using System.Web.WebPages.Razor.Configuration
@using Datingsite.DropDownLists
@using Datingsite.Models
@model Datingsite.Models.HomeIndexViewModel

@{
    Layout = "~/Views/Shared/_LayoutLoggedIn.cshtml";
}

<div id="SearchField">
    @Html.Partial("_SearchFieldPartialView", new SearchModel())
</div>

    @Html.ActionLink(@Model.User.FirstName + " " + @Model.User.LastName, "ProfileStart", "UserProfile", null, new { id = "UserProfileButton" })
    @foreach (var user in Model.FriendRequests)
    {
        Model.countFriendRequests++;
    }
@* Visar antalet friendrequests genom att lägga ikonen för en user med antalet friendrquests som tas fram i koden ovan *@
<div id="FriendRequest">
    <button class="btn btn-default" aria-expanded="true" type="button">
        @Html.ActionLink("" + @Model.countFriendRequests, "FriendRequests", "FriendRequest", new { userID = @Model.Login.LoginID }, new { @class = "glyphicon glyphicon-user" })
    </button>
</div>
<div id="EditProfilWindow">
    @using (Html.BeginForm("EditProfile", "EditProfile"))
    {
        <div id="EditProfil1">


            @Html.LabelFor(x => x.FirstName)<br />
            @Html.TextBoxFor(x => x.FirstName, new {@Value = Model.User.FirstName})<br />
            @Html.ValidationMessageFor(x => x.FirstName)<br />

            @Html.LabelFor(x => x.LastName)<br />
            @Html.TextBoxFor(x => x.LastName, new {@Value = Model.User.LastName})<br />
            @Html.ValidationMessageFor(x => x.LastName)<br />

            @Html.LabelFor(x => x.Phone)<br />
            @Html.TextBoxFor(x => x.Phone, new {@Value = Model.User.Phone})<br />
            @Html.ValidationMessageFor(x => x.Phone)<br />

            @Html.LabelFor(x => x.Age)<br />
            @Html.TextBoxFor(x => x.Age, new {@Value = Model.User.Age})<br />
            @Html.ValidationMessageFor(x => x.Age)<br />

            @Html.LabelFor(x => x.Gender)<br />
            @Html.DropDownListFor(x => x.Gender,
                new SelectList(GenderList.genderList, "GenderID", "GenderName", new {@Value = Model.User.Gender}))<br />
            @Html.ValidationMessageFor(x => x.Gender)<br />

            @Html.LabelFor(x => x.Email)<br />
            @Html.TextBoxFor(x => x.Email, new {@Value = Model.User.Email})<br />
            @Html.ValidationMessageFor(x => x.Email)<br />
        </div>
        <div id="EditProfil2">

            @Html.LabelFor(x => x.ProfileStatus)<br/>
            @Html.DropDownListFor(x => x.ProfileStatus,
                new SelectList(ProfileStatusList.profileStatusList, "ProfileID", "Status"),
                new {@Value = Model.User.Private})<br/>
            @Html.ValidationMessageFor(x => x.ProfileStatus)<br/>

            @Html.LabelFor(x => x.City)<br/>
            @Html.TextBoxFor(x => x.City, new {@Value = Model.User.City})<br/>
            @Html.ValidationMessageFor(x => x.City)<br/>

            @Html.LabelFor(x => x.PreferedGender)<br/>
            @Html.DropDownListFor(x => x.PreferedGender,
                new SelectList(PreferedGenderList.preferedGenderList, "PreferedGenderID", "PreferedGenderName", Model.User.PreferedGender))<br/>
            @Html.ValidationMessageFor(x => x.PreferedGender)<br/>

            @Html.LabelFor(x => x.LoginName)<br/>
            @Html.TextBoxFor(x => x.LoginName, new {@Value = Model.Login.LoginName})<br/>
            @Html.ValidationMessageFor(x => x.LoginName)<br/>

            @Html.LabelFor(x => x.Password)<br/>
            @Html.PasswordFor(x => x.Password, new {@Value = Model.Login.Password})<br/>
            @Html.ValidationMessageFor(x => x.Password)<br/>

            @Html.LabelFor(x => x.ConfirmPassword)<br/>
            @Html.PasswordFor(x => x.ConfirmPassword, new {@Value = Model.Login.Password})<br/>
            @Html.ValidationMessageFor(x => x.ConfirmPassword)<br/>
            @Html.ValidationSummary(true)
            <br/>

        </div>
    <input id="submiteditprofile" type="submit" value="Uppdatera profil" /><br />
    }
    <div id="ImageUpload">
        <p>Profilbild:</p>
        @if (Model.Image != null)
        {
            <img src="data:image/png;base64,@System.Convert.ToBase64String(Model.Image.Picture)" alt="" height="180" width="150" />
        }
        @using (Html.BeginForm("FileUpload", "EditProfile", FormMethod.Post,
            new { enctype = "multipart/form-data" }))
        {
            <label for="file">Upload Image:</label>
            <br />
            <input type="file" name="file" id="file" style="width: 100%;"/>
            <br />
            <input type="submit" value="Upload" class="submit" />
        }
    </div>
</div>

